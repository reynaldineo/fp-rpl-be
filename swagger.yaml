tags:
- name: auth
  description: auth API
- name: user
  description: user API
- name: course
  description: course API
- name: store
  description: store API

paths:
# [POST] auth/login
  /auth/login:
    post:
      tags:
      - auth
      summary: Login to an existing account
      parameters:
      - name: body
        in: body
        description: login Object
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: 'OK'
          examples:
            application/json:
              message: "success"
              id: "user-id"
              role: "Konsumen"
              jwt: "token"
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

# [POST] auth/register
  /auth/register:
    post:
      tags:
      - auth
      summary: Register an account
      parameters:
      - name: body
        in: body
        description: Register Object
        required: true
        schema:
          $ref: '#/definitions/Register'
      responses:
        200:
          description: 'OK'
          examples:
            application/json:
              message: "success"
              id: "user-id"
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  # [GET] user/getrole
  /user/getrole:
      get:
        tags:
        - user
        summary: Get the role of current logged in user
        responses:
          200:
            description: 'OK'
            examples:
              application/json:
                id: "user-id"
                role: "Produsen"
          400:
            description: 'Bad Request'
          500:
            description: 'Server Error'

  # [GET] user/details
  /user/details:
      get:
        tags:
        - user
        summary: Get the details of current logged in user
        responses:
          200:
            description: 'OK'
            examples:
                application/json:
                  id: "user-id"
                  role: null
                  created_at: "2024-04-08T00:00:00.000Z"
                  bio: null
          400:
            description: 'Bad Request'
          500:
            description: 'Server Error'

# [POST] user/sample
  /user/sample/{number}:
    post:
      tags:
      - user
      summary: Example api endpoint
      parameters:
      - name: number
        in: path
        description: a number
        required: true
        type: integer
      - name: body
        in: body
        description: SampleData
        required: true
        schema:
          $ref: '#/definitions/SampleData'
      responses:
        200:
          description: 'OK'
          examples:
            application/json:
              number: 0
              str: 'sample string'
              temperature: 30
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

# definitions
definitions:
  Login:
    type: object
    required:
        -email
        -password
    properties:
      email:
        type: string
        format: email
        description: email
      password:
        type: string
        description: password
  Register:
    type: object
    required:
        -email
        -password
    properties:
      email:
        type: string
        format: email
        description: email
      password:
        type: string
        description: password
  SampleData:
    type: object
    required:
        - str
        - temperature
    properties:
      str:
        type: string
        description: sample string
      temperature:
        type: integer
        description: sample temperature
schemes:
 - https
 - http